<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="casabapictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAnAPcAAAAAAPf3EPf//xAQUhAQITopEO+llJTvGWvOWu8Q3u8QWmuM3inOWq0Q3q0QWimM
        3mvOGe8QnO8QGWuMnCnOGa0QnK0QGSmMnGsZhGsZzpS1WikZhCkZzs6llJTOGUrOWs4Q3s4QWkqM3gjO
        WowQ3owQWgiM3krOGc4QnM4QGUqMnAjOGYwQnIwQGQiMnEoZhEoZzpSUWggZhAgZzoycCGNKUmNKEDop
        Sq2lrRAIAEJjEGtapWspUu/FGWspGUJjUpSlKe+c5mtazpTma+/mlClahClazua1SkIIGUIIUkpapWsI
        UmsIGc6c5kpazpTmSs7mlAhahAhazuaUStacGdbmSmuEGYycjIxznIxzGc6ltbWlCGuEWrXOGWNjEBAx
        IWvv3u9z3mvvWu9zWmulWu8x3u8xWmut3invWq0x3q0xWimt3rXvGSmlWq1z3q1zWinv3q3vnGvvGe8x
        nO8xGWutnCnvGa0xnK0xGSmtnGulGa1znK1zGWvvnO9znO9zGSmlGSnvnGsZpe+ltWsZ77W1WikZpSkZ
        76213kqlGUqlWkrv3s5z3s5zWgilWoxz3oxzWgjv3ozvnErvnM5znM5zGQilGQjvnIy13oxSnIxSGWvO
        3u9S3krvWu9SWs4x3s4xWkqt3gjvWowx3owxWgit3imEWq1S3q1SWinO3q3OnErvGc4xnM4xGUqtnAjv
        GYwxnIwxGQitnK1SnK1SGWvOnO9SnO9SGSmEGSnOnEoZpUoZ77WUWggZpQgZ762U3kqEGUqEWkrO3s5S
        3s5SWgiEWoxS3oxSWgjO3ozOnErOnM5SnM5SGQiEGQjOnIyU3vf3AEJKEEJKStbm72tae2NjUs693hBj
        QhBjCBA6Qu/m3s7FEGta77Xma63m7+/mtSlapSla7++95rWlKea1a4ylrYzm762ljEpae0pa77XmSq3m
        zs7mtQhapQha7+aUa4zmztbma97mCPecGffmStbm1t7vIRAxABBjYxBjKRA6Y/fma/fm/wAACAAQCAAA
        ACH5BAEAAP8ALAAAAAAyACcAAAj/AP8JHEiwoMGDCBMqTHjlBgEAAL7cuLKwosWBNSB6kQctADRoXWwA
        8EftosmC0gBY6cgygMuPHkVWO3kRBwAvHl3q3KmzY7R+NBdWA8CRZ8eXPF1uARAUITUAAaIFyCEvZ9Ke
        OuX5a1rQZoB7OXJ0wWn0Kkt5TLkKJOpli5UART3S0FHgXgEvHo7y3PJF7Q0a8rZwDNzlHgAC1NhZq2ft
        XEZ/0arutDGzKVRo8mhAo5EDgDUBoEOL1vaPgNiXaJve2AINrBcrdZFIE01bdD0CBY56sayTRoEcrevd
        qFG7uIBzALpgJhD0HlLNAWycE/ClQD8AOXDjMD4NAI0AaU3W/9iCNKc8AqAhRisQLWyOasYBbNl90t9V
        lzm0Ue8MwIaXLtGA9Rlt2shHE1RlbfaPAP9ApJENNNAgEju1XXHPDScheB8A+hXgoD9eeJGFF2DVxk9E
        Gd6nFHr1AGAYANFsYYMVWeQwHW03FJCiXkkVcIUAkPQXoBU03GODDdTUxkVfJknzXVkeQQNAPQLUkIMV
        NuSQBQ1e5PAjbSUp9AVJA12RW3l7AQDaUBDmYCSHtTF30E/U6Bdegy/Zcx9soOEQ1otfivaPjgZdQQB8
        oMkpkD+SHcWjT8SBZk0MWBSARW1fhFkQUWqCpgWha6nYUwGIhtZgoFVKc5A0XnCmX3oE9f8jWVZX3ZMk
        bV6C9g+Tm4Yo4YKwEgTVrFbpBU0BkYp2KAA1CJTRSDnY4NaWOfATGq/OOifqS+vVFp6qAsgnTzRcbrOU
        aDVQRNANZFlllhWeiZYWAT/yw453bdHQBQA3gkaNugSx55I9PCa1DQA36FdPDqeKZs1N23gBQKmgNbsq
        UQW7yxJnEHHxlBa1nSNNDdbShq1B/UTmLppw3SNnNTRMaVxxdx5ETT/+AEYsXDF7ORA6gMU7s2gMW5TS
        dRD1o7TFBFHjBWYAbDc0deeopVAOL703tDVFW42QNDYcFY3QtD3stVA3uSRPZ+eUrM0XXZ+t0BUO2uVg
        RHvIrTdBAQEAOw==
</value>
  </data>
</root>